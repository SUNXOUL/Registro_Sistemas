@page "/Registro"
@inject SistemaBLL Sistemas
@inject NotificationService notificationService

<div class="container">

<div class="card">
    <div class="card-header"><h2>Sistemas</h2> </div>
        <div class="card-body">
            <div class="form-group row mt-3">
                <label For="SistemaId" class="col-md-2 col-form-label">Sistema Id:</label>
                <div class="col-md-10">
                    <div class="input-group mb-2">
                    <input id="SistemaId" type="number"  class="form-control" @bind=Sistema.SistemaId />
                    <button class="btn btn-primary" @onclick="Buscar" ><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                </svg></button>
                </div>
                </div>
            </div>
            <div class="form-group row">
                <label For="Nombre" class="col-md-2 col-form-label">Nombre:</label>
                <div class="col-md-10">
                <input id="Nombre" type="text" class="form-control" @bind=Sistema.Nombre />
                </div>
            </div>
        </div>
    <div class="card-footer">
    <center>
    <div class="btn-group">
        <button type="button" @onclick="Nuevo" class="btn btn-primary">Nuevo</button>
        <button type="submit" @onclick="Guardar" class="btn btn-success">Guardar</button>
        <button type="button"  @onclick="Eliminar" class="btn btn-danger">Eliminar</button>
    </div>
    </center>
  </div>
</div>
</div>
@code{
    [Parameter]
    public int SistemaId {get;set;}
    public Sistema Sistema {get;set;}= new Sistema();

    protected override void OnInitialized()
    {
        if(SistemaId>0)
        {
            this.Sistema.SistemaId=this.SistemaId;
            Buscar();
        }
    }

    public void Guardar()
    {
        if(Sistema.Nombre!=null)
        {
            Sistemas.Guardar(this.Sistema);
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Registro Actualizado", Detail = "Guardado con Exito", Duration = 4000 });
            Nuevo();
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error de Registro", Detail = "Nombre es un campo Requerido", Duration = 4000 });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }

    public void Nuevo()
    {
        this.Sistema=new Sistema();
    }

    public void Buscar()
    {
        var SistemaEncontrado=Sistemas.Buscar(this.Sistema.SistemaId);
        if(SistemaEncontrado != null)
        {
            Sistema = SistemaEncontrado;
        }
        else
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error de Busqueda", Detail = "Registro no encontrado", Duration = 4000 });

        }
    }
        
    public void Eliminar()
    {
        Buscar();
        Sistemas.Eliminar(this.Sistema);
        ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Actualizacion de Registro", Detail = "Eliminado con Exito", Duration = 4000 });

        Nuevo();
    }
}